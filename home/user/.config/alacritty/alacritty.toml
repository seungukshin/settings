# Configuration for Alacritty, the GPU enhanced terminal emulator.

################################################################################
# General
################################################################################
[general]

# Import additional configuration files
#import = []

# Startup directory
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
working_directory = "None"  # Default: "None"

# Live config reload (changes require restart)
live_config_reload = true  # Default: true

# Offer IPC using alacritty msg (unix only)
#ipc_socket = true  # Default: true

################################################################################
# Shell
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
################################################################################
#[terminal.shell]

# Default:
#   - (macOS) /bin/bash --login
#   - (Linux) user login shell
#   - (Windows) powershell
#program = "/bin/zsh"  # Example for Linux/BSD/macOS
#args = ["-l"]
#program = "C:\\msys64\\usr\\bin\\bash.exe"
#args = ["--login"]
#program = "C:/msys64/msys2_shell.cmd"
#args = [ "-defterm", "-here", "-no-start", "-clangarm64", "-shell", "bash" ]

################################################################################
# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
################################################################################
[env]

# TERM variable
#
# This value is used to set the `$TERM` environment variable for
# each instance of Alacritty. If it is not present, alacritty will
# check the local terminfo database and use `alacritty` if it is
# available, otherwise `xterm-256color` is used.
TERM = "xterm-256color"

################################################################################
# Window
################################################################################
[window]

# Send ESC (\x1b) before characters when alt is pressed.
option_as_alt = "Both"  # Default: "None"

# Background opacity
# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.
opacity = 0.7  # Default: 1.0

# Blur (macOS/KDE Wayland only)
blur = false  # Default: false

# Window dimensions (changes require restart)
# Specified in number of columns/lines, not pixels.
# If both are `0`, this setting is ignored.
dimensions = { columns = 0, lines = 0 }  # Default: columns = 0, lines = 0

# Window position (changes require restart)
# Specified in number of pixels.
# If the position is not set, the window manager will handle the placement.
#position = "None"  # Default: "None"

# Window padding (changes require restart)
# Blank space added around the window in pixels. This padding is scaled
# by DPI and the specified value is always added at both opposing sides.
padding = { x = 0, y = 0 }  # Default: x = 0, y = 0

# Spread additional padding evenly around the terminal content.
dynamic_padding = false  # Default: false

# Window decorations
# Values for `decorations`:
#     - full: Borders and title bar
#     - none: Neither borders nor title bar
# Values for `decorations` (macOS only):
#     - transparent: Title bar, transparent background and title bar buttons
#     - buttonless: Title bar, transparent background, but no title bar buttons
decorations = "transparent"  # Default: "Full"

# Resize increments
resize_increments = false  # Default: false

# Startup Mode (changes require restart)
# Values for `startup_mode`:
#   - Windowed
#   - Maximized
#   - Fullscreen
# Values for `startup_mode` (macOS only):
#   - SimpleFullscreen
startup_mode = "Maximized"  # Default: "Windowed"

# Window title
title = "Alacritty"  # Default: "Alacritty"

# Dynamic title
dynamic_title = false  # Default: true

# Window class (Linux only):
class = { instance = "Alacritty", general = "Alacritty" }  # Default: instance = "Alacritty", general = "Alacritty"

# GTK theme variant (Linux only)
# Override the variant of the GTK theme. Commonly supported values are `dark` and `light`.
# Set this to `None` to use the default theme variant.
#gtk_theme_variant = "None"

# Decorations theme variant
decorations_theme_variant = "None"  # Default: "None"

################################################################################
# Scrolling
################################################################################
[scrolling]

# Maximum number of lines in the scrollback buffer.
# Specifying '0' will disable scrolling.
history = 10000  # Default: 10000

# Number of lines the viewport will move for every line scrolled when
# scrollback is enabled (history > 0).
multiplier = 3  # Default: 3

# Faux Scrolling
# The `faux_multiplier` setting controls the number of lines the terminal
# should scroll when the alternate screen buffer is active. This is used
# to allow mouse scrolling for applications like `man`.
# Specifying `0` will disable faux scrolling.
#faux_multiplier = 3

# Scroll to the bottom when new text is written to the terminal.
#auto_scroll = false

################################################################################
# Font configuration (changes require restart)
################################################################################
[font]

# Normal (roman) font face
# Default:
#   - (macOS) Menlo
#   - (Linux) monospace
#   - (Windows) Consolas
normal = { family = "Inconsolata Nerd Font", style = "Regular" }  # Default for Linux/BSD: "monospace", Regular

# Bold font face
# If the bold family is not specified, it will fall back to the
# value specified for the normal font.
bold = { style = "Bold" }  # Inherits family from normal, Default style: Bold

# Italic font face
# If the italic family is not specified, it will fall back to the
# value specified for the normal font.
italic = { style = "Italic" }  # Inherits family from normal, Default style: Italic

# Bold Italic font style
bold_italic = { style = "Bold Italic" }  # Inherits family from normal, Default style: Bold Italic

# Font size in points
size = 16.0  # Default: 11.25

# Offset is the extra space around each character. `offset.y` can be thought of
# as modifying the line spacing, and `offset.x` as modifying the letter spacing.
offset = { x = 0, y = 0 }  # Default: x = 0, y = 0

# Glyph offset determines the locations of the glyphs within their cells with
# the default being at the bottom. Increasing `x` moves the glyph to the right,
# increasing `y` moves the glyph upwards.
glyph_offset = { x = 0, y = 0 }  # Default: x = 0, y = 0

# Use built-in font for box drawing characters
builtin_box_drawing = true  # Default: true

# Thin stroke font rendering (macOS only)
# Thin strokes are suitable for retina displays, but for non-retina screens
# it is recommended to set `use_thin_strokes` to `false`
# macOS >= 10.14.x:
# If the font quality on non-retina display looks bad then set
# `use_thin_strokes` to `true` and enable font smoothing by running the
# following command:
#   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
# This is a global setting and will require a log out or restart to take
# effect.
#use_thin_strokes = true

################################################################################
# Colors (Tomorrow Night Bright)
################################################################################
[colors]

# Transparent background colors
transparent_background_colors = false  # Default

# Draw bold text with bright colors
draw_bold_text_with_bright_colors = true  # Default

# Indexed Colors
# The indexed colors include all colors from 16 to 256.
# When these are not set, they're filled with sensible defaults.
# Example:
#   `- { index: 16, color: '0xff00ff' }`
indexed_colors = []

# Default colors
[colors.primary]
background = "0x000000"
foreground = "0xeaeaea"

# Bright and dim foreground colors
# The dimmed foreground color is calculated automatically if it is not present.
# If the bright foreground color is not set, or `draw_bold_text_with_bright_colors`
# is `false`, the normal foreground color will be used.
#dim_foreground = '0x9a9a9a'
#bright_foreground = '0xffffff'

# Cursor colors
# Colors which should be used to draw the terminal cursor. If these are unset,
# the cursor color will be the inverse of the cell color.
#[colors.cursor]
#text = "CellBackground"  # Default
#cursor = "CellForeground"  # Default

# Selection colors
# Colors which should be used to draw the selection area. If selection
# background is unset, selection color will be the inverse of the cell colors.
# If only text is unset the cell text color will remain the same.
#[colors.selection]
#text = "CellBackground"  # Default
#background = "CellForeground"  # Default

# Normal colors
[colors.normal]
black = "0x000000"
red = "0xd54e53"
green = "0xb9ca4a"
yellow = "0xe6c547"
blue = "0x7aa6da"
magenta = "0xc397d8"
cyan = "0x70c0ba"
white = "0xeaeaea"

# Bright colors
[colors.bright]
black = "0x666666"
red = "0xff3334"
green = "0x9ec400"
yellow = "0xe7c547"
blue = "0x7aa6da"
magenta = "0xb77ee0"
cyan = "0x54ced6"
white = "0xffffff"

# Dim colors
#[colors.dim]
#black = "#0f0f0f"  # Default
#red = "#712b2b"  # Default
#green = "#5f6f3a"  # Default
#yellow = "#a17e4d"  # Default
#blue = "#456877"  # Default
#magenta = "#704d68"  # Default
#cyan = "#4d7770"  # Default
#white = "#8e8e8e"  # Default

# Vi mode cursor colors
[colors.vi_mode_cursor]
text = "CellBackground"  # Default
cursor = "CellForeground"  # Default

# Search colors
[colors.search.matches]
foreground = "#181818"  # Default
background = "#ac4242"  # Default

[colors.search.focused_match]
foreground = "#181818"  # Default
background = "#f4bf75"  # Default

# Hint colors
[colors.hints.start]
foreground = "#181818"  # Default
background = "#f4bf75"  # Default

[colors.hints.end]
foreground = "#181818"  # Default
background = "#ac4242"  # Default

# Line indicator colors
[colors.line_indicator]
foreground = "None"  # Default
background = "None"  # Default

# Footer bar colors
[colors.footer_bar]
foreground = "#181818"  # Default
background = "#d8d8d8"  # Default

################################################################################
# Bell
################################################################################
[bell]

# Visual bell animation effect
animation = "Linear"  # Default: "Linear"

# Duration of the visual bell flash in milliseconds
duration = 0  # Default: 0

# Visual bell animation color
color = "#ffffff"  # Default: "#ffffff"

# Command executed when the bell is rung
command = "None"  # Default: "None"

################################################################################
# Selection
################################################################################
[selection]

# Characters that are used as separators for "semantic words" in Alacritty
semantic_escape_chars = ",│`|:\"' ()[]{}<>\t"  # Default: ",│`|:\"' ()[]{}<>\\t"

# When set to `true`, selected text will be copied to the primary clipboard.
save_to_clipboard = true  # Default: false

################################################################################
# Cursor
################################################################################
[cursor]

# Cursor style
# Values for `style`:
#   - ▇ Block
#   - _ Underline
#   - | Beam
style = { shape = "Block", blinking = "On" }  # Default: shape = "Block", blinking = "Off"

# Vi mode cursor style (falls back to the active value of the normal cursor if "None")
vi_mode_style = "None"  # Default: "None"

# Cursor blinking interval in milliseconds
blink_interval = 750  # Default: 750

# Time after which cursor stops blinking, in seconds
blink_timeout = 0  # Default: 5

# When true, the cursor will be rendered as a hollow box when the window is not focused
unfocused_hollow = true  # Default: true

# Thickness of the cursor relative to the cell width
thickness = 0.15  # Default: 0.15

################################################################################
# Terminal
################################################################################
[terminal]

# Controls the OSC 52 behavior for clipboard interactions
osc52 = "CopyPaste"  # Default: "OnlyCopy"

################################################################################
# Mouse
################################################################################
[mouse]

# If this is `true`, the cursor is temporarily hidden when typing.
hide_when_typing = false  # Default: false

# Mouse bindings
# Mouse bindings are specified as a list of objects, much like the key
# bindings further below.
# Each mouse binding will specify a:
# - `mouse`:
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
# - `action` (see key bindings)
# And optionally:
# - `mods` (see key bindings)
# Example: bindings = [{ mouse = "Left", action = "Paste" }]
bindings = [{ mouse = "Middle", action = "PasteSelection"}]

################################################################################
# Hints
################################################################################
[hints]

# Define the keys used for hint labels
alphabet = "jfkdls;ahgurieowpq"  # Default: "jfkdls;ahgurieowpq"

# Enable specific hints
#[[hints.enabled]]
# Example configuration (actual settings to be defined based on user preference)
# regex = "..."
# hyperlinks = true
# post_processing = true
# persist = false
# action = "..."
# command = "..."
# binding = { key = "...", mods = "...", mode = "..." }
# mouse = { mods = "...", enabled = true }

################################################################################
# Keyboard
################################################################################
[keyboard]

# Key bindings
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
# `- { key: V, mods: Control|Shift, action: Paste }`
# Each key binding will specify a:
# - `key`: Identifier of the key pressed
#    - A-Z
#    - F1-F12
#    - Key0-Key9
#    A full list with available key codes can be found here:
#    https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#    Instead of using the name of the keys, the `key` field also supports using
#    the scancode of the desired key. Scancodes have to be specified as a
#    decimal number. This command will allow you to display the hex scancodes
#    for certain keys:
#       `showkey --scancodes`.
# Then exactly one of:
# - `chars`: Send a byte sequence to the running application
#    The `chars` field writes the specified string to the terminal. This makes
#    it possible to pass escape sequences. To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
#    of tmux. Note that applications use terminfo to map escape sequences back
#    to keys. It is therefore required to update the terminfo when changing an
#    escape sequence.
# - `action`: Execute a predefined action
#   - Copy
#   - Paste
#   - PasteSelection
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Quit
#   - ToggleFullscreen
#   - SpawnNewInstance
#   - ClearLogNotice
#   - None
#   (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
# - `command`: Fork and execute a specified command plus arguments
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
# And optionally:
# - `mods`: Key modifiers to filter binding actions
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
# - `mode`: Indicate a binding for only specific terminal reported modes
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#    - AppCursor
#    - AppKeypad
#    - Alt
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `None` action.
bindings = [
    # { key = "Key", mods = "Modifiers", action = "Action" },
    # { key = "Key", mods = "Modifiers", chars = "Characters to send" },
    # ...
  # (Windows/Linux only)
  #{ key = "V",            mods = "Control|Shift",  action = "Paste"                               },
  #{ key = "C",            mods = "Control|Shift",  action = "Copy"                                },
  #{ key = "Insert",       mods = "Shift",          action = "PasteSelection"                      },
  #{ key = "Key0",         mods = "Control",        action = "ResetFontSize"                       },
  #{ key = "Equals",       mods = "Control",        action = "IncreaseFontSize"                    },
  #{ key = "Add",          mods = "Control",        action = "IncreaseFontSize"                    },
  #{ key = "Subtract",     mods = "Control",        action = "DecreaseFontSize"                    },
  #{ key = "Minus",        mods = "Control",        action = "DecreaseFontSize"                    },
  #{ key = "Return",       mods = "Alt",            action = "ToggleFullscreen"                    },
  # (macOS only)
  { key = "Key0",        mods = "Command",         action = "ResetFontSize"                       },
  { key = "Equals",      mods = "Command",         action = "IncreaseFontSize"                    },
  #{ key = "Add",         mods = "Command",         action = "IncreaseFontSize"                    },
  { key = "Minus",       mods = "Command",         action = "DecreaseFontSize"                    },
  { key = "K",           mods = "Command",         action = "ClearHistory"                        },
  { key = "K",           mods = "Command",         chars = "\u000c"                               },
  #{ key = "Y",           mods = "Control",         action = "Paste"                               },
  { key = "Y",           mods = "Control|Shift",   action = "Paste"                               },
  { key = "V",           mods = "Command",         action = "Paste"                               },
  { key = "C",           mods = "Command",         action = "Copy"                                },
  { key = "H",           mods = "Command",         action = "Hide"                                },
  { key = "Q",           mods = "Command",         action = "Quit"                                },
  { key = "W",           mods = "Command",         action = "None"                                },
  { key = "F",           mods = "Command|Control", action = "ToggleFullscreen"                    },

  { key = "Paste",                                 action = "Paste"                               },
  { key = "Copy",                                  action = "Copy"                                },
  { key = "L",           mods = "Control",         action = "ClearLogNotice"                      },
  { key = "L",           mods = "Control",         chars = "\u000c"                               },
  { key = "Home",        mods = "Alt",             chars = "\u001b[1;3H"                          },
  { key = "Home",                                  chars = "\u001bOH",        mode = "AppCursor"  },
  { key = "Home",                                  chars = "\u001b[H",        mode = "~AppCursor" },
  { key = "End",         mods = "Alt",             chars = "\u001b[1;3F"                          },
  { key = "End",                                   chars = "\u001bOF",        mode = "AppCursor"  },
  { key = "End",                                   chars = "\u001b[F",        mode = "~AppCursor" },
  { key = "PageUp",      mods = "Shift",           action = "ScrollPageUp",   mode = "~Alt"       },
  { key = "PageUp",      mods = "Shift",           chars = "\u001b[5;2~",     mode = "Alt"        },
  { key = "PageUp",      mods = "Control",         chars = "\u001b[5;5~"                          },
  { key = "PageUp",      mods = "Alt",             chars = "\u001b[5;3~"                          },
  { key = "PageUp",                                chars = "\u001b[5~"                            },
  { key = "PageDown",    mods = "Shift",           action = "ScrollPageDown", mode = "~Alt"       },
  { key = "PageDown",    mods = "Shift",           chars = "\u001b[6;2~",     mode = "Alt"        },
  { key = "PageDown",    mods = "Control",         chars = "\u001b[6;5~"                          },
  { key = "PageDown",    mods = "Alt",             chars = "\u001b[6;3~"                          },
  { key = "PageDown",                              chars = "\u001b[6~"                            },
  { key = "Tab",         mods = "Shift",           chars = "\u001b[Z"                             },
  { key = "Back",                                  chars = "\u007f"                               },
  { key = "Back",        mods = "Alt",             chars = "\u001b\u007f"                         },
  { key = "Insert",                                chars = "\u001b[2~"                            },
  { key = "Delete",                                chars = "\u001b[3~"                            },
  { key = "Left",        mods = "Shift",           chars = "\u001b[1;2D"                          },
  { key = "Left",        mods = "Control",         chars = "\u001b[1;5D"                          },
  { key = "Left",        mods = "Alt",             chars = "\u001b[1;3D"                          },
  { key = "Left",                                  chars = "\u001b[D",        mode = "~AppCursor" },
  { key = "Left",                                  chars = "\u001bOD",        mode = "AppCursor"  },
  { key = "Right",       mods = "Shift",           chars = "\u001b[1;2C"                          },
  { key = "Right",       mods = "Control",         chars = "\u001b[1;5C"                          },
  { key = "Right",       mods = "Alt",             chars = "\u001b[1;3C"                          },
  { key = "Right",                                 chars = "\u001b[C",        mode = "~AppCursor" },
  { key = "Right",                                 chars = "\u001bOC",        mode = "AppCursor"  },
  { key = "Up",          mods = "Shift",           chars = "\u001b[1;2A"                          },
  { key = "Up",          mods = "Control",         chars = "\u001b[1;5A"                          },
  { key = "Up",          mods = "Alt",             chars = "\u001b[1;3A"                          },
  { key = "Up",                                    chars = "\u001b[A",        mode = "~AppCursor" },
  { key = "Up",                                    chars = "\u001bOA",        mode = "AppCursor"  },
  { key = "Down",        mods = "Shift",           chars = "\u001b[1;2B"                          },
  { key = "Down",        mods = "Control",         chars = "\u001b[1;5B"                          },
  { key = "Down",        mods = "Alt",             chars = "\u001b[1;3B"                          },
  { key = "Down",                                  chars = "\u001b[B",        mode = "~AppCursor" },
  { key = "Down",                                  chars = "\u001bOB",        mode = "AppCursor"  },
  { key = "F1",                                    chars = "\u001bOP"                             },
  { key = "F2",                                    chars = "\u001bOQ"                             },
  { key = "F3",                                    chars = "\u001bOR"                             },
  { key = "F4",                                    chars = "\u001bOS"                             },
  { key = "F5",                                    chars = "\u001b[15~"                           },
  { key = "F6",                                    chars = "\u001b[17~"                           },
  { key = "F7",                                    chars = "\u001b[18~"                           },
  { key = "F8",                                    chars = "\u001b[19~"                           },
  { key = "F9",                                    chars = "\u001b[20~"                           },
  { key = "F10",                                   chars = "\u001b[21~"                           },
  { key = "F11",                                   chars = "\u001b[23~"                           },
  { key = "F12",                                   chars = "\u001b[24~"                           },
  { key = "F1",          mods = "Shift",           chars = "\u001b[1;2P"                          },
  { key = "F2",          mods = "Shift",           chars = "\u001b[1;2Q"                          },
  { key = "F3",          mods = "Shift",           chars = "\u001b[1;2R"                          },
  { key = "F4",          mods = "Shift",           chars = "\u001b[1;2S"                          },
  { key = "F5",          mods = "Shift",           chars = "\u001b[15;2~"                         },
  { key = "F6",          mods = "Shift",           chars = "\u001b[17;2~"                         },
  { key = "F7",          mods = "Shift",           chars = "\u001b[18;2~"                         },
  { key = "F8",          mods = "Shift",           chars = "\u001b[19;2~"                         },
  { key = "F9",          mods = "Shift",           chars = "\u001b[20;2~"                         },
  { key = "F10",         mods = "Shift",           chars = "\u001b[21;2~"                         },
  { key = "F11",         mods = "Shift",           chars = "\u001b[23;2~"                         },
  { key = "F12",         mods = "Shift",           chars = "\u001b[24;2~"                         },
  { key = "F1",          mods = "Control",         chars = "\u001b[1;5P"                          },
  { key = "F2",          mods = "Control",         chars = "\u001b[1;5Q"                          },
  { key = "F3",          mods = "Control",         chars = "\u001b[1;5R"                          },
  { key = "F4",          mods = "Control",         chars = "\u001b[1;5S"                          },
  { key = "F5",          mods = "Control",         chars = "\u001b[15;5~"                         },
  { key = "F6",          mods = "Control",         chars = "\u001b[17;5~"                         },
  { key = "F7",          mods = "Control",         chars = "\u001b[18;5~"                         },
  { key = "F8",          mods = "Control",         chars = "\u001b[19;5~"                         },
  { key = "F9",          mods = "Control",         chars = "\u001b[20;5~"                         },
  { key = "F10",         mods = "Control",         chars = "\u001b[21;5~"                         },
  { key = "F11",         mods = "Control",         chars = "\u001b[23;5~"                         },
  { key = "F12",         mods = "Control",         chars = "\u001b[24;5~"                         },
  { key = "F1",          mods = "Alt",             chars = "\u001b[1;6P"                          },
  { key = "F2",          mods = "Alt",             chars = "\u001b[1;6Q"                          },
  { key = "F3",          mods = "Alt",             chars = "\u001b[1;6R"                          },
  { key = "F4",          mods = "Alt",             chars = "\u001b[1;6S"                          },
  { key = "F5",          mods = "Alt",             chars = "\u001b[15;6~"                         },
  { key = "F6",          mods = "Alt",             chars = "\u001b[17;6~"                         },
  { key = "F7",          mods = "Alt",             chars = "\u001b[18;6~"                         },
  { key = "F8",          mods = "Alt",             chars = "\u001b[19;6~"                         },
  { key = "F9",          mods = "Alt",             chars = "\u001b[20;6~"                         },
  { key = "F10",         mods = "Alt",             chars = "\u001b[21;6~"                         },
  { key = "F11",         mods = "Alt",             chars = "\u001b[23;6~"                         },
  { key = "F12",         mods = "Alt",             chars = "\u001b[24;6~"                         },
  { key = "F1",          mods = "Super",           chars = "\u001b[1;3P"                          },
  { key = "F2",          mods = "Super",           chars = "\u001b[1;3Q"                          },
  { key = "F3",          mods = "Super",           chars = "\u001b[1;3R"                          },
  { key = "F4",          mods = "Super",           chars = "\u001b[1;3S"                          },
  { key = "F5",          mods = "Super",           chars = "\u001b[15;3~"                         },
  { key = "F6",          mods = "Super",           chars = "\u001b[17;3~"                         },
  { key = "F7",          mods = "Super",           chars = "\u001b[18;3~"                         },
  { key = "F8",          mods = "Super",           chars = "\u001b[19;3~"                         },
  { key = "F9",          mods = "Super",           chars = "\u001b[20;3~"                         },
  { key = "F10",         mods = "Super",           chars = "\u001b[21;3~"                         },
  { key = "F11",         mods = "Super",           chars = "\u001b[23;3~"                         },
  { key = "F12",         mods = "Super",           chars = "\u001b[24;3~"                         },
  { key = "NumpadEnter",                           chars = "\n"                                   },

  # Alt
  { key = "A",           mods = "Alt",             chars = "\u001ba"                              },
  { key = "B",           mods = "Alt",             chars = "\u001bb"                              },
  { key = "C",           mods = "Alt",             chars = "\u001bc"                              },
  { key = "D",           mods = "Alt",             chars = "\u001bd"                              },
  { key = "E",           mods = "Alt",             chars = "\u001be"                              },
  { key = "F",           mods = "Alt",             chars = "\u001bf"                              },
  { key = "G",           mods = "Alt",             chars = "\u001bg"                              },
  { key = "H",           mods = "Alt",             chars = "\u001bh"                              },
  { key = "I",           mods = "Alt",             chars = "\u001bi"                              },
  { key = "J",           mods = "Alt",             chars = "\u001bj"                              },
  { key = "K",           mods = "Alt",             chars = "\u001bk"                              },
  { key = "L",           mods = "Alt",             chars = "\u001bl"                              },
  { key = "M",           mods = "Alt",             chars = "\u001bm"                              },
  { key = "N",           mods = "Alt",             chars = "\u001bn"                              },
  { key = "O",           mods = "Alt",             chars = "\u001bo"                              },
  { key = "P",           mods = "Alt",             chars = "\u001bp"                              },
  { key = "Q",           mods = "Alt",             chars = "\u001bq"                              },
  { key = "R",           mods = "Alt",             chars = "\u001br"                              },
  { key = "S",           mods = "Alt",             chars = "\u001bs"                              },
  { key = "T",           mods = "Alt",             chars = "\u001bt"                              },
  { key = "U",           mods = "Alt",             chars = "\u001bu"                              },
  { key = "V",           mods = "Alt",             chars = "\u001bv"                              },
  { key = "W",           mods = "Alt",             chars = "\u001bw"                              },
  { key = "X",           mods = "Alt",             chars = "\u001bx"                              },
  { key = "Y",           mods = "Alt",             chars = "\u001by"                              },
  { key = "Z",           mods = "Alt",             chars = "\u001bz"                              },
  { key = "A",           mods = "Alt|Shift",       chars = "\u001bA"                              },
  { key = "B",           mods = "Alt|Shift",       chars = "\u001bB"                              },
  { key = "C",           mods = "Alt|Shift",       chars = "\u001bC"                              },
  { key = "D",           mods = "Alt|Shift",       chars = "\u001bD"                              },
  { key = "E",           mods = "Alt|Shift",       chars = "\u001bE"                              },
  { key = "F",           mods = "Alt|Shift",       chars = "\u001bF"                              },
  { key = "G",           mods = "Alt|Shift",       chars = "\u001bG"                              },
  { key = "H",           mods = "Alt|Shift",       chars = "\u001bH"                              },
  { key = "I",           mods = "Alt|Shift",       chars = "\u001bI"                              },
  { key = "J",           mods = "Alt|Shift",       chars = "\u001bJ"                              },
  { key = "K",           mods = "Alt|Shift",       chars = "\u001bK"                              },
  { key = "L",           mods = "Alt|Shift",       chars = "\u001bL"                              },
  { key = "M",           mods = "Alt|Shift",       chars = "\u001bM"                              },
  { key = "N",           mods = "Alt|Shift",       chars = "\u001bN"                              },
  { key = "O",           mods = "Alt|Shift",       chars = "\u001bO"                              },
  { key = "P",           mods = "Alt|Shift",       chars = "\u001bP"                              },
  { key = "Q",           mods = "Alt|Shift",       chars = "\u001bQ"                              },
  { key = "R",           mods = "Alt|Shift",       chars = "\u001bR"                              },
  { key = "S",           mods = "Alt|Shift",       chars = "\u001bS"                              },
  { key = "T",           mods = "Alt|Shift",       chars = "\u001bT"                              },
  { key = "U",           mods = "Alt|Shift",       chars = "\u001bU"                              },
  { key = "V",           mods = "Alt|Shift",       chars = "\u001bV"                              },
  { key = "W",           mods = "Alt|Shift",       chars = "\u001bW"                              },
  { key = "X",           mods = "Alt|Shift",       chars = "\u001bX"                              },
  { key = "Y",           mods = "Alt|Shift",       chars = "\u001bY"                              },
  { key = "Z",           mods = "Alt|Shift",       chars = "\u001bZ"                              },
  { key = "Key1",        mods = "Alt",             chars = "\u001b1"                              },
  { key = "Key2",        mods = "Alt",             chars = "\u001b2"                              },
  { key = "Key3",        mods = "Alt",             chars = "\u001b3"                              },
  { key = "Key4",        mods = "Alt",             chars = "\u001b4"                              },
  { key = "Key5",        mods = "Alt",             chars = "\u001b5"                              },
  { key = "Key6",        mods = "Alt",             chars = "\u001b6"                              },
  { key = "Key7",        mods = "Alt",             chars = "\u001b7"                              },
  { key = "Key8",        mods = "Alt",             chars = "\u001b8"                              },
  { key = "Key9",        mods = "Alt",             chars = "\u001b9"                              },
  { key = "Key0",        mods = "Alt",             chars = "\u001b0"                              },
  { key = "`",           mods = "Alt",             chars = "\u001b`"                              }, # Alt + `
  { key = "`",           mods = "Alt|Shift",       chars = "\u001b~"                              }, # Alt + ~
  { key = "Period",      mods = "Alt",             chars = "\u001b."                              }, # Alt + .
  { key = "Key8",        mods = "Alt|Shift",       chars = "\u001b*"                              }, # Alt + *
  { key = "Key3",        mods = "Alt|Shift",       chars = "\u001b#"                              }, # Alt + #
  { key = "Period",      mods = "Alt|Shift",       chars = "\u001b>"                              }, # Alt + >
  { key = "Comma",       mods = "Alt|Shift",       chars = "\u001b<"                              }, # Alt + <
  { key = "Minus",       mods = "Alt|Shift",       chars = "\u001b_"                              }, # Alt + _
  { key = "Key5",        mods = "Alt|Shift",       chars = "\u001b%"                              }, # Alt + %
  { key = "Key6",        mods = "Alt|Shift",       chars = "\u001b^"                              }, # Alt + ^
  { key = "Backslash",   mods = "Alt",             chars = "\u001b\\"                             }, # Alt + \
  { key = "Backslash",   mods = "Alt|Shift",       chars = "\u001b|"                              }, # Alt + |

  # Control
  { key = "Space",       mods = "Control",         chars = "\u0000"                               },
  { key = "Return",      mods = "Control",         chars = "\u001b[13;5u"                         },
  { key = "Slash",       mods = "Control",         chars = "\u001f"                               },
  { key = "Period",      mods = "Control",         chars = "\u001b[46;5u"                         },
  { key = "Comma",       mods = "Control",         chars = "\u001b[44;5u"                         },
]

################################################################################
# Debug
################################################################################
[debug]

# Display the time it takes to redraw each frame.
render_timer = false

# Keep the log file after quitting Alacritty.
persistent_logging = false

# Log level
# Values for `log_level`:
#   - None
#   - Error
#   - Warn
#   - Info
#   - Debug
#   - Trace
log_level = "Warn"

# Print all received window events.
print_events = false
