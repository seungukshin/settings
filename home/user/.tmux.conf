# ------------------------------------------------------------------------------
# base settings
# ------------------------------------------------------------------------------
#bind -n C-. display "receive C-." \; send-keys C-.
#bind -n C-. send-keys C-.

# change prefix key (-g for global)
unbind C-b
set -g prefix C-t

# sned prefix key to the application when getting prefix key twice
bind C-t send-prefix

# shorter delay for prefix key (-s for server)
set -sg escape-time 0
set -g display-time 300

# start numbering at 1 for windows and panes
set -g base-index 1
set -g pane-base-index 1

# reload the configuration
bind r source-file ~/.tmux.conf \; display-message "Reloaded"

# disable mouse
setw -g mouse off

# support 256 color
set -g default-terminal "screen-256color"

# notify events in other windows
setw -g monitor-activity on
set -g visual-activity on

# ------------------------------------------------------------------------------
# colors
# ------------------------------------------------------------------------------
# define colors
LIGHTBLUE="#00afff"    # light blue
WHITE="#e4e4e4"        # white
YELLOW="#ffff00"       # yellow
PINK="#ff00af"         # pink
LIGHTGRAY="#8a8a8a"    # light gray
GRAY="#303030"         # gray
DARKGRAY="#080808"     # dark gray
RED="#d70000"          # red

# ------------------------------------------------------------------------------
# windows / panes
# ------------------------------------------------------------------------------
# chage to last window
bind t last-window

# select a window (-r for repeatable)
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# split a window
bind | split-window -h
bind - split-window -v

# select a pane
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize a pane
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# pane colors
set -g pane-border-style fg=$LIGHTGRAY,bg=$DARKGRAY,none
set -g pane-active-border-style fg=$LIGHTBLUE,bg=$DARKGRAY,none

# ------------------------------------------------------------------------------
# status bar
# ------------------------------------------------------------------------------
# message style
set -g message-style fg=$DARKGRAY,bg=$LIGHTBLUE,none
set -g message-command-style fg=$DARKGRAY,bg=$LIGHTBLUE,none

# update every second
set -g status-interval 1

# status bar position and align
if-shell "[ $(uname) = 'Linux' ]" {
  set -g status-position top
} {
  set -g status-position bottom
}
set -g status-justify left

# status bar - default color
set -g status-style fg=$WHITE,bg=$DARKGRAY,none

# status bar - left (-a for append)
set -g status-left-length 300
set -g status-left ""
set -ga status-left "#[fg=$DARKGRAY,bg=$YELLOW,none] ❐ #S #[fg=$YELLOW,bg=$PINK,none] "    # session name
set -ga status-left "#[fg=$WHITE,bg=$PINK,none] ↑#(uptime | sed 's/^.*up//' | sed 's/\[\[:digit:\]\]\\{1,\\}\[\[:space:\]\]\\{1,\\}users.*$//' | sed 's/,//g' | sed 's/  / /g') #[fg=$PINK,bg=$DARKGRAY,none] "    # uptime

# status bar - right
set -g status-right-length 500
set -g status-right ""
set -ga status-right "#[fg=$LIGHTGRAY,bg=$DARKGRAY,none] #{cpu_fg_color}C:#{cpu_percentage} #{cpu_icon} #{ram_fg_color}R:#{ram_percentage} #{ram_icon} "    # cpu and ram
set -ga status-right "#[fg=$LIGHTGRAY,bg=$DARKGRAY,none]#[fg=$LIGHTGRAY,bg=$DARKGRAY,none] #{battery_icon_status} #{battery_percentage} #{battery_icon_charge} "    # battery
set -ga status-right "#[fg=$LIGHTGRAY,bg=$DARKGRAY,none]#[fg=$LIGHTGRAY,bg=$DARKGRAY,none] #(date +\"%m-%d %H:%M\") "    # time and date
set -ga status-right "#[fg=$RED,bg=$DARKGRAY,none]#[fg=$WHITE,bg=$RED,none] #(whoami) "    # id
set -ga status-right "#[fg=$WHITE,bg=$RED,non]#[fg=$DARKGRAY,bg=$WHITE,none] #H "    # host name

# window styles
set -g window-status-style "fg=$LIGHTGRAY,bg=$DARKGRAY,none"
set -g window-status-current-style "fg=$DARKGRAY,bg=$LIGHTBLUE,none"
set -g window-status-last-style "fg=$LIGHTBLUE,bg=$DARKGRAY,dim"

set -g @window-status-left-style "fg=$DARKGRAY,bg=$DARKGRAY,none"
set -g @window-status-main-style "fg=$LIGHTGRAY,bg=$DARKGRAY,none"
set -g @window-status-right-style "fg=$DARKGRAY,bg=$DARKGRAY,none"

set -g @window-status-last-left-style "fg=$DARKGRAY,bg=$GRAY,none"
set -g @window-status-last-main-style "fg=$LIGHTBLUE,bg=$GRAY,none"
set -g @window-status-last-right-style "fg=$GRAY,bg=$DARKGRAY,none"

set -g @window-status-current-left-style "fg=$DARKGRAY,bg=$LIGHTBLUE,none"
set -g @window-status-current-main-style "fg=$DARKGRAY,bg=$LIGHTBLUE,none"
set -g @window-status-current-right-style "fg=$LIGHTBLUE,bg=$DARKGRAY,none"

# normal / last window format
set -g window-status-format ""
set -ga window-status-format "#[#{?window_last_flag,#{@window-status-last-left-style},#{@window-status-left-style}}] "
set -ga window-status-format "#[#{?window_last_flag,#{@window-status-last-main-style},#{@window-status-main-style}}]#I  #W "
set -ga window-status-format "#[#{?window_last_flag,#{@window-status-last-right-style},#{@window-status-right-style}}]"

# current window format
set -g window-status-current-format ""
set -ga window-status-current-format "#[#{@window-status-current-left-style}] "
set -ga window-status-current-format "#[#{@window-status-current-main-style}]#I  #W "
set -ga window-status-current-format "#[#{@window-status-current-right-style}]"

# ------------------------------------------------------------------------------
# hook
# ------------------------------------------------------------------------------
set-hook -g after-select-window 'run-shell "
  if printf %s #{window_name} | grep -q -e \"^amd\" -e \"^intel\" -e \"^arm[1-6]\"; then
    if tmux list-panes -F \"#{pane_current_command}\" | grep -q -v ssh; then
      tmux display-message \"run ssh\"
      tmux send-keys \"ssh #{window_name} -t \\\"tmux at || tmux -2\\\"\" C-m
    else
      tmux display-message \"already ssh\"
    fi
  else
    tmux display-message \"different name\"
  fi
"'

# ------------------------------------------------------------------------------
# plug in
# ------------------------------------------------------------------------------
# tmux plugin manager
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# logging
set -g @plugin 'tmux-plugins/tmux-logging'

# extrakto
set -g @plugin 'laktak/extrakto'
set -g @extrakto_key 'space'
set -g @extrakto_copy_key 'tab'
set -g @extrakto_insert_key 'enter'

# resurrect
set -g @plugin 'tmux-plugins/tmux-resurrect'

# cpu / ram status
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @cpu_low_icon "▁"
set -g @cpu_medium_icon "▄"
set -g @cpu_high_icon "█"
set -g @ram_low_icon "▁"
set -g @ram_medium_icon "▄"
set -g @ram_high_icon "█"

# battery status
set -g @plugin 'tmux-plugins/tmux-battery'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

